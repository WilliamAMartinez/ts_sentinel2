knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(kableExtra)
path_accuracies = "D:\\TESISMASTER\\csv\\accuracies_staticmodel.txt"
#reading files
df_accuracies =  read.table(path_accuracies,sep = "\t", header = TRUE)
output1= NULL
for (k in unique(df_accuracies$Model)){
index  = which(df_accuracies$Model == k)
df_accuracies_query = df_accuracies[index,-1]
output0 = NULL
for(i in 1:dim(df_accuracies_query)[2]){
name_column = colnames(df_accuracies_query)[i]
year = substr(name_column,4,7)
month = substr(name_column,8,9)
day = substr(name_column,10,11)
fecha = as.character(as.Date(paste0(year,"/",month,"/",day), "%Y/%m/%d"))
df0 = data.frame(k, letters[i] ,fecha,df_accuracies_query[,i])
output0 = rbind(output0, df0)
}
output1 =  rbind(output1,output0)
}
colnames(output1) = c("Model","id","time","Accuracy")
# library
library(ggplot2)
# grouped boxplot
ggplot(output1, aes(x=time, y=Accuracy, fill=Model)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
geom_boxplot()
path_accuracies_comp = "D:\\TESISMASTER\\csv\\accuracies_staticmodel_composites.txt"
#reading files
df_accuracies_comp =  read.table(path_accuracies_comp,sep = "\t", header = TRUE)
df_accuracies_comp$Time = factor(df_accuracies_comp$Time, c("Spring","Summer",'Autumn','Winter'))
# library
library(ggplot2)
# grouped boxplot
ggplot(df_accuracies_comp, aes(x=Time, y=Accuracy, fill=Model)) +
geom_boxplot()
df_accuracies_comp$Time == "Summer"
df_accuracies_comp[df_accuracies_comp$Time == "Summer",]
ch = df_accuracies_comp[df_accuracies_comp$Time == "Summer",]
head(ch)
ch = df_accuracies_comp[df_accuracies_comp$Time == "Autumn",]
ch
ch$Model
ch2 = ch[ch$Model == "IQR",]
ch2$Accuracy
median(ch2$Accuracy)
file_class_composites = 'D:\\TESISMASTER\\csv\\Accuracies_perclass_composites.txt'
df_accuracies_pclass =  read.table(file_class_composites,sep = "\t", header = TRUE)
df_accuracies_pclass$Treatment = factor(df_accuracies_pclass$Treatment, c("Raw","Composite"))
df_accuracies_pclass$Season = factor(df_accuracies_pclass$Season ,
c("Best","Autumn","Summer","Winter"))
#graphic
queary_df = df_accuracies_pclass[df_accuracies_pclass$Landcover %in% c("Rice fields", "Herbaceus-periodic","Vineyard","Orchards.","Olive-trees","Herbaceous-permanent"),]
ggplot(queary_df, aes(x=Season, y=Accuracy, fill=Treatment)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
geom_boxplot() +
facet_wrap(~ Landcover)
#graphic
queary_df = df_accuracies_pclass[df_accuracies_pclass$Landcover %in% c("Holm and cork trees", "Eucalytus trees","Coniferous trees","Natural-herbaceous"),]
ggplot(queary_df, aes(x=Season, y=Accuracy, fill=Treatment)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
geom_boxplot() +
facet_wrap(~ Landcover)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(kableExtra)
library(sf)
library(ggplot2)
folder_path = "D:\\TESISMASTER\\VECTOR\\Analysis_outliers\\training_samples.shp"
#Days of the images
day_shoot = c("2017/01/15", "2017/04/05", "2017/05/25", "2017/06/04", "2017/06/14",
"2017/07/04", "2017/07/09", "2017/07/14", "2017/07/24", "2017/07/29",
"2017/08/03", "2017/08/08", "2017/08/13", "2017/08/18", "2017/09/02" ,
"2017/09/07", "2017/09/12", "2017/09/22", "2017/09/27", "2017/10/02",
"2017/10/12", "2017/10/22", "2017/10/27", "2017/11/11", "2017/11/16",
"2017/11/21", "2017/12/01","2017/12/16", "2017/12/21")
#Name of the classes
clases =    c("Sealed", "Non_vegetated","Herbaceous_periodic","Herbaceous_permanet",
"Natural_Herbaceous","Bushes_and_shrubs","Vineyard","Olive_trees",
"Holm_and_Cork_Trees", "Eucalyptus_trees", "Coniferous_trees","Rice_fields",
"Orchards")
#converting days characters to time format in R
day_shoot= strptime(as.character(day_shoot), "%Y/%m/%d")
#reading shapefile
dataset = sf::read_sf(folder_path)
#creating a copy to save later the files
dataset_c = dataset
#Removing geometry of the dataset
st_geometry(dataset) = NULL
model1 =  function(x){
ind_list = list()
qua = quantile(x,na.rm=TRUE)
q25 =qua[2]
q75 =qua[4]
IQR = q75 - q25
limit_left = q25 - 1.5*IQR
limit_rigth = q75 + 1.5*IQR
ind = which(x<= limit_left | x >= limit_rigth)
return(ind)
}
model2 =  function(x){
sd_x = sd(x,na.rm = TRUE)
mean_x = mean(x,na.rm = TRUE)
limit_left = mean_x - 2*sd_x
limit_rigth = mean_x + 2*sd_x
ind = which(x<= limit_left | x >= limit_rigth)
return(ind)
}
df_without_outliers = function(query_dataset,
methodo = c("None","model_1", "model_2"),
day_shoot){
#selecting model
list_out = vector("list",2)
func_choice <- switch(methodo,
'None'='None',
'model_1'=model1,
'model_2'=model2
)
w = NULL
if(is.function(func_choice)){
outlier_indices = apply(query_dataset,2,func_choice)
for(j in outlier_indices)
{
if(length(j)!= 0){
w = c(w,j)
}
}
#removing repeated values and quering only valid values
query_dataset_vv = query_dataset[-unique(w),]
list_out[[1]] = length(unique(w))
list_out[[2]] = unique(w)
}else{
query_dataset_vv = query_dataset
list_out[[1]] = 0
list_out[[2]] = 0
}
output_all = NULL
for(i in 1:dim(query_dataset_vv)[2])
{
trajectory = as.factor(c(1:dim(query_dataset_vv)[1]))
ndvi_day_output = data.frame(day_shoot[i],trajectory,query_dataset_vv[,i])
colnames(ndvi_day_output) = c('Days','Trajectory','NDVI')
output_all = rbind(output_all, ndvi_day_output)
}
#Converting day in time format
output_all$Days = as.Date(output_all$Days)
list_out[[3]] = output_all
return(list_out)
#done
}
query_dataset = dataset[dataset$CLASS_NAME == "Rice_fields",c(-1,-2)]
df = df_without_outliers(query_dataset,methodo = "None", day_shoot)
#graphic
ggplot(df[[3]], aes(x=Days)) +
geom_line(aes(y=NDVI, group=Trajectory, color='blue'),show.legend = FALSE) +
theme(axis.text=element_text(size=13)) +
labs(title="Time Series Rice Fields",
subtitle=paste0("Row data"," 1000 samples, ", df[[1]], " out, ", (df[[1]]/1000)*100,"%" ),
y="NDVI",
color=NULL)
df = df_without_outliers(query_dataset,methodo = 'model_1', day_shoot)
#graphic
ggplot(df[[3]], aes(x=Days)) +
geom_line(aes(y=NDVI, group=Trajectory, color='red'),show.legend = FALSE) +
labs(title="Time Series Rice fields",
subtitle=paste0("Method: IQR Â± 1.5Q, from 1000 samples ", df[[1]], " are out: ", (df[[1]]/1000)*100,"%" ),
y="NDVI",
color=NULL)
df = df_without_outliers(query_dataset,methodo = 'model_2', day_shoot)
#graphic
ggplot(df[[3]], aes(x=Days)) +
geom_line(aes(y=NDVI, group=Trajectory, color='red'),show.legend = FALSE) +
labs(title="Time Series Rice fields",
subtitle=paste0("Method: Mean Â± sd, from 1000 samples ", df[[1]], " are out: ", (df[[1]]/1000)*100,"%" ),
y="NDVI",
color=NULL)
dataset2 = dataset_c[1,]
for( i in unique(dataset$CLASS_NAME)){
index = which(dataset_c$CLASS_NAME == i)
query_dataset_f = dataset[index,c(-1,-2)]
df = df_without_outliers(query_dataset_f,methodo = "model_1", day_shoot)
index2 = index[-df[[2]]]
dataset2 = rbind(dataset2, dataset_c[index2,])
}
#removing firs column
dataset2 = dataset2[-1,]
st_geometry(dataset2) = NULL
output_df =  NULL
for(w in unique(dataset2$CLASS_NAME)){
len_d1 = length(which(dataset$CLASS_NAME == w))
len_d2 = length(which(dataset2$CLASS_NAME == w))
ln_data = c(len_d1-len_d2,len_d2)
name_data = c("Data1","Data2")
ldf = data.frame(w,name_data,ln_data)
output_df = rbind(output_df, ldf)
}
colnames(output_df) = c("Classes","Data","Len")
# Stacked barplot with multiple groups
ggplot(data=output_df, aes(x=Classes, y=Len, fill=Data)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
geom_bar(stat="identity")
head(output_df)
output_df[output_df$Data == "Data1",]
output_df[output_df$Data == "Data1",3]
sum(output_df[output_df$Data == "Data1",3])
1600/15000
output_df$Data
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(kableExtra)
path_accuracies = "D:\\TESISMASTER\\csv\\accuracies_staticmodel.txt"
#reading files
df_accuracies =  read.table(path_accuracies,sep = "\t", header = TRUE)
output1= NULL
for (k in unique(df_accuracies$Model)){
index  = which(df_accuracies$Model == k)
df_accuracies_query = df_accuracies[index,-1]
output0 = NULL
for(i in 1:dim(df_accuracies_query)[2]){
name_column = colnames(df_accuracies_query)[i]
year = substr(name_column,4,7)
month = substr(name_column,8,9)
day = substr(name_column,10,11)
fecha = as.character(as.Date(paste0(year,"/",month,"/",day), "%Y/%m/%d"))
df0 = data.frame(k, letters[i] ,fecha,df_accuracies_query[,i])
output0 = rbind(output0, df0)
}
output1 =  rbind(output1,output0)
}
colnames(output1) = c("Model","id","time","Accuracy")
# library
library(ggplot2)
# grouped boxplot
ggplot(output1, aes(x=time, y=Accuracy, fill=Model)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
geom_boxplot()
path_accuracies_comp = "D:\\TESISMASTER\\csv\\accuracies_staticmodel_composites.txt"
#reading files
df_accuracies_comp =  read.table(path_accuracies_comp,sep = "\t", header = TRUE)
df_accuracies_comp$Time = factor(df_accuracies_comp$Time, c("Spring","Summer",'Autumn','Winter'))
# library
library(ggplot2)
# grouped boxplot
ggplot(df_accuracies_comp, aes(x=Time, y=Accuracy, fill=Model)) +
geom_boxplot()
file_class_composites = 'D:\\TESISMASTER\\csv\\Accuracies_perclass_composites.txt'
df_accuracies_pclass =  read.table(file_class_composites,sep = "\t", header = TRUE)
df_accuracies_pclass$Treatment = factor(df_accuracies_pclass$Treatment, c("Raw","Composite"))
df_accuracies_pclass$Season = factor(df_accuracies_pclass$Season ,
c("Best","Autumn","Summer","Winter"))
#graphic
queary_df = df_accuracies_pclass[df_accuracies_pclass$Landcover %in% c("Rice fields", "Herbaceus-periodic","Vineyard","Orchards.","Olive-trees","Herbaceous-permanent"),]
ggplot(queary_df, aes(x=Season, y=Accuracy, fill=Treatment)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
geom_boxplot() +
facet_wrap(~ Landcover)
#graphic
queary_df = df_accuracies_pclass[df_accuracies_pclass$Landcover %in% c("Holm and cork trees", "Eucalytus trees","Coniferous trees","Natural-herbaceous"),]
ggplot(queary_df, aes(x=Season, y=Accuracy, fill=Treatment)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
geom_boxplot() +
facet_wrap(~ Landcover)
#graphic
queary_df = df_accuracies_pclass[df_accuracies_pclass$Landcover %in% c("Sealed", "Non_vegetated","Wetlands","Water"),]
ggplot(queary_df, aes(x=Season, y=Accuracy, fill=Treatment)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
geom_boxplot() +
facet_wrap(~ Landcover)
#graphic
queary_df = df_accuracies_pclass[df_accuracies_pclass$Landcover %in% c("Sealed", "Non_vegetated","Wetlands","Water"),]
ggplot(queary_df, aes(x=Season, y=Accuracy, fill=Treatment)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
geom_boxplot() +
facet_wrap(~ Landcover)
#graphic
queary_df = df_accuracies_pclass[df_accuracies_pclass$Landcover %in% c("Holm and cork trees", "Eucalytus trees","Coniferous trees","Natural-herbaceous"),]
ggplot(queary_df, aes(x=Season, y=Accuracy, fill=Treatment)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
geom_boxplot() +
facet_wrap(~ Landcover)
#graphic
queary_df = df_accuracies_pclass[df_accuracies_pclass$Landcover %in% c("Sealed", "Non_vegetated","Wetlands","Water"),]
ggplot(queary_df, aes(x=Season, y=Accuracy, fill=Treatment)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
geom_boxplot() +
facet_wrap(~ Landcover)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(kableExtra)
path_accuracies = "D:\\TESISMASTER\\csv\\accuracies_staticmodel.txt"
#reading files
df_accuracies =  read.table(path_accuracies,sep = "\t", header = TRUE)
output1= NULL
for (k in unique(df_accuracies$Model)){
index  = which(df_accuracies$Model == k)
df_accuracies_query = df_accuracies[index,-1]
output0 = NULL
for(i in 1:dim(df_accuracies_query)[2]){
name_column = colnames(df_accuracies_query)[i]
year = substr(name_column,4,7)
month = substr(name_column,8,9)
day = substr(name_column,10,11)
fecha = as.character(as.Date(paste0(year,"/",month,"/",day), "%Y/%m/%d"))
df0 = data.frame(k, letters[i] ,fecha,df_accuracies_query[,i])
output0 = rbind(output0, df0)
}
output1 =  rbind(output1,output0)
}
colnames(output1) = c("Model","id","time","Accuracy")
path_accuracies = "D:\\TESISMASTER\\csv\\accuracies_staticmodel.txt"
#reading files
df_accuracies =  read.table(path_accuracies,sep = "\t", header = TRUE)
output1= NULL
for (k in unique(df_accuracies$Model)){
index  = which(df_accuracies$Model == k)
df_accuracies_query = df_accuracies[index,-1]
output0 = NULL
for(i in 1:dim(df_accuracies_query)[2]){
name_column = colnames(df_accuracies_query)[i]
year = substr(name_column,4,7)
month = substr(name_column,8,9)
day = substr(name_column,10,11)
fecha = as.character(as.Date(paste0(year,"/",month,"/",day), "%Y/%m/%d"))
df0 = data.frame(k, letters[i] ,fecha,df_accuracies_query[,i])
output0 = rbind(output0, df0)
}
output1 =  rbind(output1,output0)
}
colnames(output1) = c("Model","id","time","Accuracy")
# library
library(ggplot2)
# grouped boxplot
ggplot(output1, aes(x=time, y=Accuracy, fill=Model)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
geom_boxplot()
path_accuracies_comp = "D:\\TESISMASTER\\csv\\accuracies_staticmodel_composites.txt"
#reading files
df_accuracies_comp =  read.table(path_accuracies_comp,sep = "\t", header = TRUE)
df_accuracies_comp$Time = factor(df_accuracies_comp$Time, c("Spring","Summer",'Autumn','Winter'))
# library
library(ggplot2)
# grouped boxplot
ggplot(df_accuracies_comp, aes(x=Time, y=Accuracy, fill=Model)) +
geom_boxplot()
file_class_composites = 'D:\\TESISMASTER\\csv\\Accuracies_perclass_composites.txt'
df_accuracies_pclass =  read.table(file_class_composites,sep = "\t", header = TRUE)
df_accuracies_pclass$Treatment = factor(df_accuracies_pclass$Treatment, c("Raw","Composite"))
df_accuracies_pclass$Season = factor(df_accuracies_pclass$Season ,
c("Best","Autumn","Summer","Winter"))
#graphic
queary_df = df_accuracies_pclass[df_accuracies_pclass$Landcover %in% c("Rice fields", "Herbaceus-periodic","Vineyard","Orchards.","Olive-trees","Herbaceous-permanent"),]
ggplot(queary_df, aes(x=Season, y=Accuracy, fill=Treatment)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
geom_boxplot() +
facet_wrap(~ Landcover)
file_class_composites = 'D:\\TESISMASTER\\csv\\Accuracies_perclass_composites.txt'
df_accuracies_pclass =  read.table(file_class_composites,sep = "\t", header = TRUE)
df_accuracies_pclass$Treatment = factor(df_accuracies_pclass$Treatment, c("Raw","Composite"))
df_accuracies_pclass$Season = factor(df_accuracies_pclass$Season ,
c("Best","Autumn","Summer","Winter"))
#graphic
queary_df = df_accuracies_pclass[df_accuracies_pclass$Landcover %in% c("Rice fields", "Herbaceus-periodic","Vineyard","Orchards.","Olive-trees","Herbaceous-permanent"),]
ggplot(queary_df, aes(x=Season, y=Accuracy, fill=Treatment)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
geom_boxplot() +
facet_wrap(~ Landcover)
#graphic
queary_df = df_accuracies_pclass[df_accuracies_pclass$Landcover %in% c("Holm and cork trees", "Eucalytus trees","Coniferous trees","Natural-herbaceous"),]
ggplot(queary_df, aes(x=Season, y=Accuracy, fill=Treatment)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
geom_boxplot() +
facet_wrap(~ Landcover)
#graphic
queary_df = df_accuracies_pclass[df_accuracies_pclass$Landcover %in% c("Sealed", "Non_vegetated","Wetlands","Water"),]
ggplot(queary_df, aes(x=Season, y=Accuracy, fill=Treatment)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
geom_boxplot() +
facet_wrap(~ Landcover)
