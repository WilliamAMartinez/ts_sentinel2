geom_boxplot()
query_dataset3
query_dataset3 = dataset2[dataset2$CLASS_NAME %in% c('Rice_fields',
'Herbaceous_permanet')
,c(-1)]
query_dataset3
trajectories_agricultur = trajectories_boxplot(query_dataset3)
trajectories_agricultur
trajectories_agricultur = trajectories_boxplot(query_dataset3)
ggplot(trajectories_agricultur, aes(x=time, y=OA, fill=class)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1),legend.position="bottom") +
geom_boxplot()
trajectories_agricultur = trajectories_boxplot(query_dataset3)
ggplot(trajectories_agricultur, aes(x=time, y=OA, fill=class)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1),legend.position="bottom") +
geom_boxplot()
ggplot(trajectories_agricultur, aes(x=time, y=OA, fill=class)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1),legend.position="bottom") +
geom_boxplot() +
geom_smooth(method = "lm", se=FALSE, color="black", aes(group=1))
ggplot(trajectories_agricultur, aes(x=time, y=OA, fill=class)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1),legend.position="bottom") +
geom_boxplot() +
geom_smooth(method = "lm", se=FALSE, color="black", aes(group=1))
ggplot(trajectories_agricultur, aes(x=time, y=OA, fill=class)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1),legend.position="bottom") +
geom_boxplot() +
geom_smooth(aes(x=time,y=OA,color=treatment,fill=class),method=loess)
ggplot(trajectories_agricultur, aes(x=time, y=OA, fill=class)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1),legend.position="bottom") +
geom_boxplot() +
geom_smooth(aes(x=time,y=OA,color=class,fill=class),method=loess)
ggplot(trajectories_agricultur, aes(x=time, y=OA, fill=class)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1),legend.position="bottom") +
geom_boxplot() +
geom_smooth(se = FALSE, method = lm)
ggplot(trajectories_agricultur, aes(x=time, y=OA, fill=class)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1),legend.position="bottom") +
geom_boxplot() +
geom_smooth(data=trajectories_agricultur,
aes(x=time, y=OA), method="loess", n= 40, se=TRUE, color="red", size=1.5)
ggplot(trajectories_agricultur, aes(x=time, y=OA, fill=class)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1),legend.position="bottom") +
geom_boxplot() +
geom_smooth(data=trajectories_agricultur,
aes(x=time, y=OA, fill=class), method="loess", n= 40, se=TRUE, color="red", size=1.5)
ggplot(trajectories_agricultur, aes(x=time, y=OA, fill=class)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1),legend.position="bottom") +
geom_boxplot() +
geom_smooth(data=trajectories_agricultur,
aes(x=as.facto(time), y=OA, fill=class), method="loess", n= 40, se=TRUE, color="red", size=1.5)
ggplot(trajectories_agricultur, aes(x=time, y=OA, fill=class)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1),legend.position="bottom") +
geom_boxplot() +
geom_smooth(data=trajectories_agricultur,
aes(x=as.factor(time), y=OA, fill=class), method="loess", n= 40, se=TRUE, color="red", size=1.5)
query_dataset3 = dataset2[dataset2$CLASS_NAME %in% c('Rice_fields',
'Herbaceous_permanet')
,c(-1)]
#trajectories_agricultur= trajectories(query_dataset3)
trajectories_agricultur = trajectories_boxplot(query_dataset3)
ggplot(trajectories_agricultur, aes(x=time, y = NDVI, fill=class)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1),legend.position="bottom") +
geom_boxplot()
library(reshape2)
query_dataset2 = dataset2[dataset2$CLASS_NAME %in% c('Holm_and_Cork_Trees',
'Eucalyptus_trees',
'Coniferous_trees')
,c(-1)]
func = function(x) x
func_median = function(x) median(x, na.rm = TRUE)
trajectories_boxplot = function(df){
st_geometry(df) = NULL
output= NULL
for(i in unique(df$CLASS_NAME)){
index = which(df$CLASS_NAME == i)
df_list = lapply(df[index,-1], func)
names(df_list) = day_shoot
df0 = reshape2::melt(df_list)
df1 = cbind(df0,i)
output = rbind(output , df1)
}
colnames(output) = c("NDVI","time","class")
return(output)
}
df_trees = trajectories_boxplot(query_dataset2)
ggplot(df_trees, aes(x=time, y=NDVI, fill=class)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1),legend.position="bottom") +
geom_boxplot()
query_dataset3 = dataset2[dataset2$CLASS_NAME %in% c('Rice_fields',
'Herbaceous_permanet')
,c(-1)]
#trajectories_agricultur= trajectories(query_dataset3)
trajectories_agricultur = trajectories_boxplot(query_dataset3)
ggplot(trajectories_agricultur, aes(x=time, y = NDVI, fill=class)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1),legend.position="bottom") +
geom_boxplot()
#ggplot(trajectories_agricultur, aes(x=day, y=median, color = id)) +
#  geom_line(aes(x=day, y = median, color=id)) +
#  geom_ribbon(aes(ymin=lower_limit,ymax=upper_limit,fill=id),color="grey70",alpha=0.4)
query_herbaceousperiodic = dataset2[dataset2$CLASS_NAME == "Herbaceous_periodic",c(-2)]
ind_irrig = which(query_herbaceousperiodic$DESCRICAO == "2.1.2.01.1 Culturas tempor치rias de regadio")
ind_not_irrig = which(query_herbaceousperiodic$DESCRICAO == "2.1.1.01.1 Culturas tempor치rias de sequeiro")
query_herbaceousperiodic[ind_irrig,1] = "Irrigated"
query_herbaceousperiodic[ind_not_irrig,1] = "Not_Irrigated"
#trajectories_herbaceousperiodic = trajectories(query_herbaceousperiodic)
trajectories_herbaceousperiodic = trajectories_boxplot(query_herbaceousperiodic)
query_herbaceousperiodic
library(reshape2)
query_dataset2 = dataset2[dataset2$CLASS_NAME %in% c('Holm_and_Cork_Trees',
'Eucalyptus_trees',
'Coniferous_trees')
,c(-1)]
func = function(x) x
func_median = function(x) median(x, na.rm = TRUE)
trajectories_boxplot = function(df){
st_geometry(df) = NULL
df_names = colnames(df)
colnames(df) = c("category",df_names[-1])
output= NULL
for(i in unique(df$category)){
index = which(df$category == i)
df_list = lapply(df[index,-1], func)
names(df_list) = day_shoot
df0 = reshape2::melt(df_list)
df1 = cbind(df0,i)
output = rbind(output , df1)
}
colnames(output) = c("NDVI","time","class")
return(output)
}
df_trees = trajectories_boxplot(query_dataset2)
ggplot(df_trees, aes(x=time, y=NDVI, fill=class)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1),legend.position="bottom") +
geom_boxplot()
query_dataset3 = dataset2[dataset2$CLASS_NAME %in% c('Rice_fields',
'Herbaceous_permanet')
,c(-1)]
#trajectories_agricultur= trajectories(query_dataset3)
trajectories_agricultur = trajectories_boxplot(query_dataset3)
ggplot(trajectories_agricultur, aes(x=time, y = NDVI, fill=class)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1),legend.position="bottom") +
geom_boxplot()
#ggplot(trajectories_agricultur, aes(x=day, y=median, color = id)) +
#  geom_line(aes(x=day, y = median, color=id)) +
#  geom_ribbon(aes(ymin=lower_limit,ymax=upper_limit,fill=id),color="grey70",alpha=0.4)
query_herbaceousperiodic = dataset2[dataset2$CLASS_NAME == "Herbaceous_periodic",c(-2)]
ind_irrig = which(query_herbaceousperiodic$DESCRICAO == "2.1.2.01.1 Culturas tempor치rias de regadio")
ind_not_irrig = which(query_herbaceousperiodic$DESCRICAO == "2.1.1.01.1 Culturas tempor치rias de sequeiro")
query_herbaceousperiodic[ind_irrig,1] = "Irrigated"
query_herbaceousperiodic[ind_not_irrig,1] = "Not_Irrigated"
#trajectories_herbaceousperiodic = trajectories(query_herbaceousperiodic)
trajectories_herbaceousperiodic = trajectories_boxplot(query_herbaceousperiodic)
ggplot(trajectories_herbaceousperiodic, aes(x=time, y = NDVI, fill=class)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1),legend.position="bottom") +
geom_boxplot()
#ggplot(trajectories_herbaceousperiodic, aes(x=day, y=median, color = id)) +
#  geom_line(aes(x=day, y = median, color=id)) +
#  geom_ribbon(aes(ymin=lower_limit,ymax=upper_limit,fill=id),color="grey70",alpha=0.4)
query_naturalherbaceous_bushes = dataset2[dataset2$CLASS_NAME %in% c("Bushes_and_shrubs","Natural_Herbaceous") ,c(-1)]
query_nh = trajectories(query_naturalherbaceous_bushes)
ggplot(query_nh, aes(x=day, y=median, color = id)) +
geom_line(aes(x=day, y = median, color=id)) +
geom_ribbon(aes(ymin=lower_limit,ymax=upper_limit,fill=id),color="grey70",alpha=0.4)
query_naturalherbaceous_bushes = dataset2[dataset2$CLASS_NAME %in% c("Bushes_and_shrubs","Natural_Herbaceous") ,c(-1)]
#query_nh = trajectories(query_naturalherbaceous_bushes)
query_nh = trajectories_boxplot(query_naturalherbaceous_bushes)
ggplot(query_nh, aes(x=time, y = NDVI, fill=class)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1),legend.position="bottom") +
geom_boxplot()
#ggplot(query_nh, aes(x=day, y=median, color = id)) +
#  geom_line(aes(x=day, y = median, color=id)) +
#  geom_ribbon(aes(ymin=lower_limit,ymax=upper_limit,fill=id),color="grey70",alpha=0.4)
dataset_nv = dataset[dataset$CLASS_NAME == "Non_vegetated",]
trajectories_dataset_nv = trajectories(dataset_nv[,-2])
ggplot(trajectories_dataset_nv , aes(x=day, y=median, color = id)) +
geom_line(aes(x=day, y = median, color=id)) +
geom_ribbon(aes(ymin=lower_limit,ymax=upper_limit,fill=id),color="grey70",alpha=0.4)+
facet_grid(id~.)+ theme(legend.position="none")
dataset_nv = dataset[dataset$CLASS_NAME == "Non_vegetated",]
#trajectories_dataset_nv = trajectories(dataset_nv[,-2])
trajectories_dataset_nv = trajectories_boxplot(dataset_nv[,-2])
ggplot(trajectories_dataset_nv, aes(x=time, y = NDVI, fill=class)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1),legend.position="bottom") +
geom_boxplot()
#ggplot(trajectories_dataset_nv , aes(x=day, y=median, color = id)) +
#  geom_line(aes(x=day, y = median, color=id)) +
#  geom_ribbon(aes(ymin=lower_limit,ymax=upper_limit,fill=id),color="grey70",alpha=0.4)+
#  facet_grid(id~.)+ theme(legend.position="none")
table_nv = table(dataset_nv$DESCRICAO)
df_nv = data.frame(table_nv, pos= as.numeric(table_nv)*0.5)
ggplot(data=df_nv , aes(x=Var1, y=Freq)) +
coord_flip() +
geom_bar(stat="identity", fill="steelblue") +
geom_text(aes(label = Freq, y= pos))
query_dataset_nv = dataset[dataset$DESCRICAO %in% c("3.3.1.01.1 Praias, dunas e areais interiores"),]
id_nv = df_without_outliers(query_dataset_nv[,c(-1,-2)] ,methodo = "None", day_shoot)
#graphic
ggplot(id_nv[[3]], aes(x=Days)) +
geom_line(aes(y=NDVI, group=Trajectory, color='blue'),show.legend = FALSE) +
theme(axis.text=element_text(size=13)) +
labs(title="Time Series non-vegetatation",
subtitle=paste0("Row data"," 473 samples"),
y="NDVI",
color=NULL)
dataset_water = dataset[dataset$CLASS_NAME == "Water" ,]
table_water = table(dataset_water$DESCRICAO)
df_water = data.frame(table_water, pos= as.numeric(table_water)*0.5)
ggplot(data=df_water , aes(x=Var1, y=Freq)) +
coord_flip() +
geom_bar(stat="identity", fill="steelblue") +
geom_text(aes(label = Freq, y= pos))
query_dataset_nv = dataset[dataset$DESCRICAO %in% c("3.3.1.01.1 Praias, dunas e areais interiores"),]
id_nv = df_without_outliers(query_dataset_nv[,c(-1,-2)] ,methodo = "None", day_shoot)
#graphic
ggplot(id_nv[[3]], aes(x=Days)) +
geom_line(aes(y=NDVI, group=Trajectory, color='blue'),show.legend = FALSE) +
theme(axis.text=element_text(size=13)) +
labs(title="Time Series non-vegetatation",
subtitle=paste0("Row data"," 473 samples"),
y="NDVI",
color=NULL)
query_dataset_water = dataset[dataset$DESCRICAO %in% c("5.2.2.01.1 Desembocaduras fluviais" , "5.1.1.01.1 Cursos de 치gua naturais", "5.1.2.02.1 Reservat칩rios de barragens" ),]
#graphic
#trajectories_query_dataset_water = trajectories(query_dataset_water[,-2])
trajectories_query_dataset_water = trajectories_boxplot(query_dataset_water[,-2])
ggplot(trajectories_query_dataset_water, aes(x=time, y = NDVI, fill=class)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1),legend.position="bottom") +
geom_boxplot()
#ggplot(trajectories_query_dataset_water, aes(x=day, y=median, color = id)) +
#  geom_line(aes(x=day, y = median, color=id)) +
#  geom_ribbon(aes(ymin=lower_limit,ymax=upper_limit,fill=id),color="grey70",alpha=0.4)+
#  facet_grid(id~.)+ theme(legend.position="none")
remove_water_outliers = function(x){
#copy of the data frame
x1 = x[,c(-1,-2)]
st_geometry(x1) = NULL
#function evaluating all positives during the year
positive = function(y){
return(!all(y >= 0))
}
rem_ind = apply(x1,1,positive)
return(x[rem_ind,])
}
query2_dataset_water = remove_water_outliers(query_dataset_water)
dataset_sealed = dataset[dataset$CLASS_NAME == "Sealed" , ]
table_sealed = table(dataset_sealed$DESCRICAO)
df_sealed = data.frame(table_sealed , pos= as.numeric(table_sealed)*0.5)
ggplot(data=df_sealed , aes(x=Var1, y=Freq)) +
coord_flip() +
geom_bar(stat="identity", fill="steelblue") +
geom_text(aes(label = Freq, y= pos))
query1_dataset_sealed = dataset_sealed[dataset_sealed$DESCRICAO %in% c("1.2.2.01.1 Rede vi치ria e espa칞os associados",
"1.2.1.01.1 Ind칰stria",
"1.1.1.02.1 Tecido urbano cont칤nuo predominantemente horizontal"),]
#graphic
trajectories_query1_dataset_sealed = trajectories(query1_dataset_sealed[,-2])
ggplot(trajectories_query1_dataset_sealed, aes(x=day, y=median, color = id)) +
geom_line(aes(x=day, y = median, color=id)) +
geom_ribbon(aes(ymin=lower_limit,ymax=upper_limit,fill=id),color="grey70",alpha=0.4)+
facet_grid(id~.)+ theme(legend.position="none")
query_dataset_water = dataset[dataset$DESCRICAO %in% c("5.2.2.01.1 Desembocaduras fluviais" , "5.1.1.01.1 Cursos de 치gua naturais", "5.1.2.02.1 Reservat칩rios de barragens" ),]
#graphic
#trajectories_query_dataset_water = trajectories(query_dataset_water[,-2])
trajectories_query_dataset_water = trajectories_boxplot(query_dataset_water[,-2])
ggplot(trajectories_query_dataset_water, aes(x=time, y = NDVI, fill=class)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1),legend.position="bottom") +
geom_boxplot() +
facet_grid(id~.)
query_dataset_water = dataset[dataset$DESCRICAO %in% c("5.2.2.01.1 Desembocaduras fluviais" , "5.1.1.01.1 Cursos de 치gua naturais", "5.1.2.02.1 Reservat칩rios de barragens" ),]
#graphic
#trajectories_query_dataset_water = trajectories(query_dataset_water[,-2])
trajectories_query_dataset_water = trajectories_boxplot(query_dataset_water[,-2])
ggplot(trajectories_query_dataset_water, aes(x=time, y = NDVI, fill=class)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1),legend.position="bottom") +
geom_boxplot() +
facet_grid(id~.)+ theme(legend.position="none")
query_dataset_water = dataset[dataset$DESCRICAO %in% c("5.2.2.01.1 Desembocaduras fluviais" , "5.1.1.01.1 Cursos de 치gua naturais", "5.1.2.02.1 Reservat칩rios de barragens" ),]
#graphic
#trajectories_query_dataset_water = trajectories(query_dataset_water[,-2])
trajectories_query_dataset_water = trajectories_boxplot(query_dataset_water[,-2])
ggplot(trajectories_query_dataset_water, aes(x=time, y = NDVI, fill=class)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1),legend.position="bottom") +
geom_boxplot() +
facet_grid(class~.)+ theme(legend.position="none")
#ggplot(trajectories_query_dataset_water, aes(x=day, y=median, color = id)) +
#  geom_line(aes(x=day, y = median, color=id)) +
#  geom_ribbon(aes(ymin=lower_limit,ymax=upper_limit,fill=id),color="grey70",alpha=0.4)+
#  facet_grid(id~.)+ theme(legend.position="none")
query1_dataset_sealed = dataset_sealed[dataset_sealed$DESCRICAO %in% c("1.2.2.01.1 Rede vi치ria e espa칞os associados",
"1.2.1.01.1 Ind칰stria",
"1.1.1.02.1 Tecido urbano cont칤nuo predominantemente horizontal"),]
#graphic
#trajectories_query1_dataset_sealed = trajectories(query1_dataset_sealed[,-2])
query1_dataset_sealed = trajectories_boxplot(query1_dataset_sealed[,-2])
ggplot(query1_dataset_sealed, aes(x=time, y = NDVI, fill=class)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1),legend.position="bottom") +
geom_boxplot() +
facet_grid(class~.)+ theme(legend.position="none")
#ggplot(trajectories_query1_dataset_sealed, aes(x=day, y=median, color = id)) +
#  geom_line(aes(x=day, y = median, color=id)) +
#  geom_ribbon(aes(ymin=lower_limit,ymax=upper_limit,fill=id),color="grey70",alpha=0.4)+
#  facet_grid(id~.)+ theme(legend.position="none")
query1_dataset_sealed = dataset_sealed[dataset_sealed$DESCRICAO %in% c("1.2.2.01.1 Rede vi치ria e espa칞os associados",
"1.2.1.01.1 Ind칰stria",
"1.1.1.02.1 Tecido urbano cont칤nuo predominantemente horizontal"),]
#graphic
#trajectories_query1_dataset_sealed = trajectories(query1_dataset_sealed[,-2])
query1_dataset_sealed = trajectories_boxplot(query1_dataset_sealed[,-2])
ggplot(query1_dataset_sealed, aes(x=time, y = NDVI, fill=class)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1),legend.position="bottom") +
geom_boxplot()
#ggplot(trajectories_query1_dataset_sealed, aes(x=day, y=median, color = id)) +
#  geom_line(aes(x=day, y = median, color=id)) +
#  geom_ribbon(aes(ymin=lower_limit,ymax=upper_limit,fill=id),color="grey70",alpha=0.4)+
#  facet_grid(id~.)+ theme(legend.position="none")
query2_dataset_sealed = dataset_sealed[dataset_sealed$DESCRICAO %in% c("1.1.2.01.1 Tecido urbano descont칤nuo",
"1.1.2.02.1 Tecido urbano descont칤nuo esparso",
"1.2.1.03.1 Instala칞칫es agr칤colas"),]
#graphic
trajectories_query2_dataset_sealed = trajectories(query2_dataset_sealed[,-2])
ggplot(trajectories_query2_dataset_sealed, aes(x=day, y=median, color = id)) +
geom_line(aes(x=day, y = median, color=id)) +
geom_ribbon(aes(ymin=lower_limit,ymax=upper_limit,fill=id),color="grey70",alpha=0.4)+
facet_grid(id~.)+ theme(legend.position="none")
query2_dataset_sealed = dataset_sealed[dataset_sealed$DESCRICAO %in% c("1.1.2.01.1 Tecido urbano descont칤nuo",
"1.1.2.02.1 Tecido urbano descont칤nuo esparso",
"1.2.1.03.1 Instala칞칫es agr칤colas"),]
#graphic
#trajectories_query2_dataset_sealed = trajectories(query2_dataset_sealed[,-2])
trajectories_query2_dataset_sealed = trajectories_boxplot(query2_dataset_sealed[,-2])
ggplot(trajectories_query2_dataset_sealed, aes(x=time, y = NDVI, fill=class)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1),legend.position="bottom") +
geom_boxplot()
#ggplot(trajectories_query2_dataset_sealed, aes(x=day, y=median, color = id)) +
#  geom_line(aes(x=day, y = median, color=id)) +
#  geom_ribbon(aes(ymin=lower_limit,ymax=upper_limit,fill=id),color="grey70",alpha=0.4)+
#  facet_grid(id~.)+ theme(legend.position="none")
query3_dataset_sealed = dataset_sealed[!(dataset_sealed$DESCRICAO%in%c("1.1.2.01.1 Tecido urbano descont칤nuo",
"1.1.2.02.1 Tecido urbano descont칤nuo esparso",
"1.2.1.03.1 Instala칞칫es agr칤colas")),]
df_query3 = df_without_outliers(query3_dataset_sealed[,c(-1,-2)], methodo = 'model_1', day_shoot, min_x = 0, max_x = 1)
#graphic
ggplot(df_query3[[3]], aes(x=Days)) +
geom_line(aes(y=NDVI, group=Trajectory, color='red'),show.legend = FALSE) +
labs(title="Time Series sealed",
subtitle=paste0("Method: IQR 췀 1.5IQR, from 541 samples ", df_query3[[1]], " are out: ", round((df_query3[[1]]/542)*100,2),"%" ),
y="NDVI",
color=NULL)
new_dataset_sealed = query3_dataset_sealed[-df_query3[[2]],]
dataset_wetlands = dataset[dataset$CLASS_NAME == "Wetlands",]
#graphic
trajectories_dataset_wetlands = trajectories(dataset_wetlands[,-2])
ggplot(trajectories_dataset_wetlands, aes(x=day, y=median, color = id)) +
geom_line(aes(x=day, y = median, color=id)) +
geom_ribbon(aes(ymin=lower_limit,ymax=upper_limit,fill=id),color="grey70",alpha=0.4)+
facet_grid(id~.)+ theme(legend.position="none")
file_out = "/home/user/Documents/TESISMASTER/VECTOR/Analysis_outliers/Cleaned/training_samples_cleaned.shp"
out1 = rbind(dataset2,query_dataset_nv)
out2 = rbind(out1,query2_dataset_water)
out3 = rbind(out2,new_dataset_sealed)
out4 = rbind(out3,dataset_wetlands)
#saving files
#sf::write_sf(out4 , dsn = file_out)
out0 = out4[out4$CLASS_NAME %in% c("Non_vegetated", "Water" , "Sealed","Wetlands") ,]
#graphic0
table_output = table(out0$CLASS_NAME)
df_output1 = data.frame(table_output*0.1, c("New Data"),pos= as.numeric(table_output*0.1)*0.5)
colnames(df_output1) = c("Classes","percentage","Data","pos")
#creating data frame to plot bars using ggplot2
df_output2 = df_output1
df_output2$percentage = c(100 - df_output1$percentage)
df_output2$pos = c(100 - round(df_output2$percentage *0.5,2))
df_output2$Data = "Data out"
df_output0 = rbind(df_output1, df_output2)
df_output0$percentage = round(df_output0$percentage,2)
df_output0$Data = factor(df_output0$Data, c("Data out","New Data"))
ggplot(data=df_output0  , aes(x=Classes, y=percentage, fill=Data)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
geom_bar(stat="identity") +
geom_text(aes(label = paste0(percentage,"%"), y= pos))
library(reshape2)
query_dataset2 = dataset[dataset$CLASS_NAME %in% c('Holm_and_Cork_Trees',
'Eucalyptus_trees',
'Coniferous_trees')
,c(-1)]
func = function(x) x
func_median = function(x) median(x, na.rm = TRUE)
trajectories_boxplot = function(df){
st_geometry(df) = NULL
df_names = colnames(df)
colnames(df) = c("category",df_names[-1])
output= NULL
for(i in unique(df$category)){
index = which(df$category == i)
df_list = lapply(df[index,-1], func)
names(df_list) = day_shoot
df0 = reshape2::melt(df_list)
df1 = cbind(df0,i)
output = rbind(output , df1)
}
colnames(output) = c("NDVI","time","class")
return(output)
}
df_trees = trajectories_boxplot(query_dataset2)
ggplot(df_trees, aes(x=time, y=NDVI, fill=class)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1),legend.position="bottom") +
geom_boxplot()
library(reshape2)
query_dataset2 = dataset2[dataset2$CLASS_NAME %in% c('Holm_and_Cork_Trees',
'Eucalyptus_trees',
'Coniferous_trees')
,c(-1)]
func = function(x) x
func_median = function(x) median(x, na.rm = TRUE)
trajectories_boxplot = function(df){
st_geometry(df) = NULL
df_names = colnames(df)
colnames(df) = c("category",df_names[-1])
output= NULL
for(i in unique(df$category)){
index = which(df$category == i)
df_list = lapply(df[index,-1], func)
names(df_list) = day_shoot
df0 = reshape2::melt(df_list)
df1 = cbind(df0,i)
output = rbind(output , df1)
}
colnames(output) = c("NDVI","time","class")
return(output)
}
df_trees = trajectories_boxplot(query_dataset2)
ggplot(df_trees, aes(x=time, y=NDVI, fill=class)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1),legend.position="bottom") +
geom_boxplot()
library(reshape2)
query_dataset2 = dataset[dataset$CLASS_NAME %in% c('Holm_and_Cork_Trees',
'Eucalyptus_trees',
'Coniferous_trees')
,c(-1)]
func = function(x) x
func_median = function(x) median(x, na.rm = TRUE)
trajectories_boxplot = function(df){
st_geometry(df) = NULL
df_names = colnames(df)
colnames(df) = c("category",df_names[-1])
output= NULL
for(i in unique(df$category)){
index = which(df$category == i)
df_list = lapply(df[index,-1], func)
names(df_list) = day_shoot
df0 = reshape2::melt(df_list)
df1 = cbind(df0,i)
output = rbind(output , df1)
}
colnames(output) = c("NDVI","time","class")
return(output)
}
df_trees = trajectories_boxplot(query_dataset2)
ggplot(df_trees, aes(x=time, y=NDVI, fill=class)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1),legend.position="bottom") +
geom_boxplot()
query_dataset3 = dataset[dataset$CLASS_NAME %in% c('Rice_fields',
'Herbaceous_permanet')
,c(-1)]
#trajectories_agricultur= trajectories(query_dataset3)
trajectories_agricultur = trajectories_boxplot(query_dataset3)
ggplot(trajectories_agricultur, aes(x=time, y = NDVI, fill=class)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1),legend.position="bottom") +
geom_boxplot()
#ggplot(trajectories_agricultur, aes(x=day, y=median, color = id)) +
#  geom_line(aes(x=day, y = median, color=id)) +
#  geom_ribbon(aes(ymin=lower_limit,ymax=upper_limit,fill=id),color="grey70",alpha=0.4)
query_herbaceousperiodic = dataset[dataset$CLASS_NAME == "Herbaceous_periodic",c(-2)]
ind_irrig = which(query_herbaceousperiodic$DESCRICAO == "2.1.2.01.1 Culturas tempor치rias de regadio")
ind_not_irrig = which(query_herbaceousperiodic$DESCRICAO == "2.1.1.01.1 Culturas tempor치rias de sequeiro")
query_herbaceousperiodic[ind_irrig,1] = "Irrigated"
query_herbaceousperiodic[ind_not_irrig,1] = "Not_Irrigated"
#trajectories_herbaceousperiodic = trajectories(query_herbaceousperiodic)
trajectories_herbaceousperiodic = trajectories_boxplot(query_herbaceousperiodic)
ggplot(trajectories_herbaceousperiodic, aes(x=time, y = NDVI, fill=class)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1),legend.position="bottom") +
geom_boxplot()
#ggplot(trajectories_herbaceousperiodic, aes(x=day, y=median, color = id)) +
#  geom_line(aes(x=day, y = median, color=id)) +
#  geom_ribbon(aes(ymin=lower_limit,ymax=upper_limit,fill=id),color="grey70",alpha=0.4)
query_herbaceousperiodic = dataset2[dataset2$CLASS_NAME == "Herbaceous_periodic",c(-2)]
ind_irrig = which(query_herbaceousperiodic$DESCRICAO == "2.1.2.01.1 Culturas tempor치rias de regadio")
ind_not_irrig = which(query_herbaceousperiodic$DESCRICAO == "2.1.1.01.1 Culturas tempor치rias de sequeiro")
query_herbaceousperiodic[ind_irrig,1] = "Irrigated"
query_herbaceousperiodic[ind_not_irrig,1] = "Not_Irrigated"
#trajectories_herbaceousperiodic = trajectories(query_herbaceousperiodic)
trajectories_herbaceousperiodic = trajectories_boxplot(query_herbaceousperiodic)
ggplot(trajectories_herbaceousperiodic, aes(x=time, y = NDVI, fill=class)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1),legend.position="bottom") +
geom_boxplot()
#ggplot(trajectories_herbaceousperiodic, aes(x=day, y=median, color = id)) +
#  geom_line(aes(x=day, y = median, color=id)) +
#  geom_ribbon(aes(ymin=lower_limit,ymax=upper_limit,fill=id),color="grey70",alpha=0.4)
query_herbaceousperiodic = dataset[dataset$CLASS_NAME == "Herbaceous_periodic",c(-2)]
ind_irrig = which(query_herbaceousperiodic$DESCRICAO == "2.1.2.01.1 Culturas tempor치rias de regadio")
ind_not_irrig = which(query_herbaceousperiodic$DESCRICAO == "2.1.1.01.1 Culturas tempor치rias de sequeiro")
query_herbaceousperiodic[ind_irrig,1] = "Irrigated"
query_herbaceousperiodic[ind_not_irrig,1] = "Not_Irrigated"
#trajectories_herbaceousperiodic = trajectories(query_herbaceousperiodic)
trajectories_herbaceousperiodic = trajectories_boxplot(query_herbaceousperiodic)
ggplot(trajectories_herbaceousperiodic, aes(x=time, y = NDVI, fill=class)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1),legend.position="bottom") +
geom_boxplot()
#ggplot(trajectories_herbaceousperiodic, aes(x=day, y=median, color = id)) +
#  geom_line(aes(x=day, y = median, color=id)) +
#  geom_ribbon(aes(ymin=lower_limit,ymax=upper_limit,fill=id),color="grey70",alpha=0.4)
